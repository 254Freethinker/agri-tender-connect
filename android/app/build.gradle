plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'com.google.dagger.hilt.android'
    id 'org.jetbrains.kotlin.plugin.serialization'
}

android {
    namespace "com.agriconnect.app"
    compileSdk 34

    defaultConfig {
        applicationId "com.agriconnect.app"
        minSdk 24
        targetSdk 34
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    buildFeatures {
        compose true
        buildConfig true
    }

    composeOptions {
        kotlinCompilerExtensionVersion rootProject.ext.compose_version
    }

    kotlinOptions {
        jvmTarget = '17'
        freeCompilerArgs += ["-opt-in=androidx.compose.material3.ExperimentalMaterial3Api"]
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
}

dependencies {
    def composeBom = platform('androidx.compose:compose-bom:2023.08.00')
    implementation composeBom

    // Capacitor
    implementation 'com.getcapacitor:android:5.5.1'

    // Core Android
    implementation "androidx.core:core-ktx:1.12.0"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:2.6.2"
    implementation "androidx.activity:activity-compose:1.8.1"
    implementation "androidx.lifecycle:lifecycle-viewmodel-compose:2.6.2"

    // Compose
    implementation "androidx.compose.ui:ui"
    implementation "androidx.compose.material3:material3"
    implementation "androidx.compose.ui:ui-tooling-preview"
    implementation "androidx.navigation:navigation-compose:2.7.5"
    debugImplementation "androidx.compose.ui:ui-tooling"

    // Supabase
    implementation 'io.github.jan-tennert.supabase:postgrest-kt:1.3.2'
    implementation 'io.github.jan-tennert.supabase:realtime-kt:1.3.2'
    implementation 'io.github.jan-tennert.supabase:storage-kt:1.3.2'
    implementation 'io.ktor:ktor-client-android:2.3.6'

    // Camera
    implementation "androidx.camera:camera-camera2:1.3.0"
    implementation "androidx.camera:camera-lifecycle:1.3.0"
    implementation "androidx.camera:camera-view:1.3.0"

    // Dependency Injection
    implementation "com.google.dagger:hilt-android:2.48"
    kapt "com.google.dagger:hilt-android-compiler:2.48"
    implementation "androidx.hilt:hilt-navigation-compose:1.1.0"

    // Image Loading
    implementation "io.coil-kt:coil-compose:2.5.0"

    // Serialization
    implementation "org.jetbrains.kotlinx:kotlinx-serialization-json:1.5.1"

    // Testing
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
    androidTestImplementation platform(composeBom)
    androidTestImplementation 'androidx.compose.ui:ui-test-junit4'
    debugImplementation 'androidx.compose.ui:ui-test-manifest'
}

apply from: 'capacitor.build.gradle'
apply plugin: 'dagger.hilt.android.plugin'

def servicesJSON = file('google-services.json')
if (servicesJSON.exists()) {
    apply plugin: 'com.google.gms.google-services'
} else {
    logger.info("google-services.json not found, google-services plugin not applied. Push Notifications won't work")
}

// Add this function at the end of the file
def getSecureProperty(propertyName) {
    def props = rootProject.ext.has('secureProps') ? rootProject.ext.secureProps : new Properties()
    def propsFile = rootProject.file('app/secure.properties')

    if (!propsFile.exists()) {
        logger.warn("secure.properties not found")
        return null
    }

    if (!rootProject.ext.has('secureProps')) {
        props.load(propsFile.newDataInputStream())
        rootProject.ext.secureProps = props
    }

    return props.getProperty(propertyName)
}
